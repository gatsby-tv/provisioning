---

- hosts: all
  remote_user: "{{ ansible_ssh_user }}"
  become: true

  tasks:

  # Basic Provisioning

  - name: Add SSH key
    authorized_key:
      user: "{{ ansible_ssh_user }}"
      key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
      state: present

  - name: Disable password authentication
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^PasswordAuthentication'
      line: "PasswordAuthentication no"
      state: present
      backup: yes

  - name: Disable root login
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: "PermitRootLogin no"
      state: present
      backup: yes

  - name: Restart SSH
    service:
      name: sshd
      state: restarted

  - name: Install debugging/system utilities
    apt:
      force_apt_get: yes
      name:
        - iotop
        - vim
        - nmap
        - net-tools

  - name: Configure vim
    copy:
      src: ./config/.vimrc
      dest: "{{ item.dest }}"
      owner: "{{ item.owner }}"
      group: "{{ item.owner }}"
      mode: "0744"
    with_items:
      - { owner: "{{ ansible_ssh_user }}", dest: "/home/{{ ansible_ssh_user }}/.vimrc" }
      - { owner: root, dest: /root/.vimrc }

  - name: Install k8s dependencies
    apt:
      name:
        - curl
        - apt-transport-https
        - nfs-common

  - name: Set static IP
    template:
      src: ./config/interfaces.j2
      dest: "/etc/network/interfaces"
      owner: root
      group: root
      mode: "0644"

  - name: Install gpg
    apt:
      name: gnupg2

  # K8s Provisioning

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: /sbin/swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Ensure network bridging kernel module is enabled
    modprobe:
      name: br_netfilter

  - name: Let iptables see bridged ip4 traffic
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: "1"
      sysctl_file: /etc/sysctl.d/k8s.conf
      reload: yes

  - name: Let iptables see bridged ip6 traffic
    sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: "1"
      sysctl_file: /etc/sysctl.d/k8s.conf
      reload: yes

  # Debian uses iptables-legacy, see link below
  # https://github.com/kubernetes/kubernetes/issues/72370
  - name: Set accept on all traffic forwarding (1/4)
    iptables:
      chain: FORWARD
      jump: ACCEPT
    register: save_iptables

  - name: Set accept on all traffic forwarding (2/4)
    iptables:
      chain: FORWARD
      jump: ACCEPT
      ip_version: ipv6
    register: save_ip6tables

  - name: Set accept on all traffic forwarding (3/4)
    command: iptables-save
    when: save_iptables is changed

  - name: Set accept on all traffic forwarding (4/4)
    command: ip6tables-save
    when: save_ip6tables is changed

  - name: Install Docker
    apt:
      name:
        - docker.io
        - python3-docker

  - name: Add ssh user to docker group
    user:
      name: "{{ ansible_ssh_user }}"
      groups: docker
      append: yes

  - name: Install K8s (1/3)
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Install K8s (2/3)
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      update_cache: yes

  - name: Install K8s (3/3)
    apt:
      name:
        - kubelet
        - kubeadm
        - kubectl

  - name: Enable kubelet service
    systemd:
      name: kubelet
      enabled: true

  - name: Start kubelet service
    systemd:
      name: kubelet
      state: started

  - name: Prevent automatic upgrades of K8s
    command: apt-mark hold kubelet kubeadm kubectl

  - name: Install pip
    apt:
      name: python3-pip

  - name: Install openshift python package
    pip:
      name: openshift

  # TODO: cgroup driver (cgroupfs or systemd)?

  # TODO: Automatic Security Updates
  # roles:
  #   - role: jnv.unattended-upgrades
  #     unattended_origins_patterns:
  #       - "origin=Debian,codename=${distro_codename},label=Debian-Security"
  #       - "o=Debian,codename=${distro_codename},label=Debian"
  #       - "o=Debian,codename=${distro_codename},a=proposed-updates"
  #     unattended_mail: "nesbitt@gatsby.sh"
